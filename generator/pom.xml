<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.gsf</groupId>
  <artifactId>generator</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <configuration.path>${basedir}/src/main/resources/generatorConfig.xml</configuration.path>
  </properties>

  <dependencies>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.16</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis.generator</groupId>
      <artifactId>mybatis-generator-core</artifactId>
      <version>1.3.7</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.5.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-maven-plugin</artifactId>
        <version>1.3.7</version>
        <configuration>
          <!-- 允许移动生成的文件 -->
          <verbose>true</verbose>
          <!-- 允许覆盖生成的文件 -->
          <overwrite>true</overwrite>
          <!-- 配置文件中的 contexts -->
          <contexts>DMySQLTables</contexts>
          <!-- 配置文件路径 -->
          <configurationFile>${configuration.path}</configurationFile>
          <!-- MBG 生成文件的目录。只要配置文件中 targetProject 设置为 MAVEN(区分大小写)，就会使用此目录，如果该目录不存在会创建该目录 -->
          <outputDirectory>${project.build.directory}/generated-sources/mybatis-generator</outputDirectory>
          <!-- 为 true，则“compile”，“provided”和“system”范围的依赖项将添加到生成器的类路径中 -->
          <includeCompileDependencies>true</includeCompileDependencies>
          <!-- 为true，则将任何范围的依赖项添加到生成器的类路径中 -->
          <includeAllDependencies>true</includeAllDependencies>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <!-- 把xml文件也打包到相应位置 -->
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>
  </build>
</project>
